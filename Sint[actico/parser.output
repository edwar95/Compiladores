Terminales no usados en la gramática

   BOOLEAN


Gramática

    0 $accept: program $end

    1 program: declaration ';' program
    2        | MAIN '(' ')' '{' commands '}' program_end
    3        | error

    4 program_end: %empty
    5            | ID '(' ')' '{' commands '}' program_end
    6            | error

    7 commands: command_list

    8 command_list: '{' command_list '}'
    9             | command command_list
   10             | %empty

   11 command: cmd ';'
   12        | stmt
   13        | error

   14 stmt: if_stmt
   15     | for_stmt
   16     | while_stmt
   17     | dowhile_stmt

   18 cmd: PRINT STRING
   19    | BREAK
   20    | RETURN
   21    | attrib
   22    | declaration

   23 if_stmt: IF '(' l_expr ')' '{' commands '}' else_stmt

   24 else_stmt: %empty
   25          | ELSE '{' commands '}'

   26 for_stmt: FOR '(' ffirst ';' l_expr ';' fthird ')' '{' commands '}'

   27 ffirst: %empty
   28       | attrib_list

   29 fthird: %empty
   30       | cmd ',' fthird
   31       | cmd

   32 while_stmt: WHILE '(' l_expr ')' '{' commands '}'

   33 dowhile_stmt: DO '{' commands '}' WHILE '(' l_expr ')' ';'

   34 declaration: INT_TYPE ID
   35            | FLOAT_TYPE ID
   36            | BOOL_TYPE ID

   37 attrib_list: attrib ',' attrib_list
   38            | attrib

   39 attrib: i_attrib
   40       | ID MATH_INC
   41       | ID MATH_DEC
   42       | ID '=' ID
   43       | error

   44 i_attrib: ID '=' g_expr

   45 l_expr: l_expr LOG_EQL l_factor
   46       | l_expr LOG_AND l_factor
   47       | l_expr LOG_OR l_factor
   48       | l_expr LOG_GT l_factor
   49       | l_expr LOG_LT l_factor
   50       | LOG_NOT l_expr
   51       | l_factor

   52 l_factor: '(' l_expr ')'
   53         | INTEGER
   54         | REAL
   55         | ID

   56 g_expr: g_expr '+' g_term
   57       | g_expr '-' g_term
   58       | g_term

   59 g_term: g_term '*' g_factor
   60       | g_term '/' g_factor
   61       | g_factor

   62 g_factor: '(' g_expr ')'
   63         | INTEGER
   64         | REAL


Terminales con las reglas donde aparecen

$end (0) 0
'(' (40) 2 5 23 26 32 33 52 62
')' (41) 2 5 23 26 32 33 52 62
'*' (42) 59
'+' (43) 56
',' (44) 30 37
'-' (45) 57
'/' (47) 60
';' (59) 1 11 26 33
'=' (61) 42 44
'{' (123) 2 5 8 23 25 26 32 33
'}' (125) 2 5 8 23 25 26 32 33
error (256) 3 6 13 43
MAIN (258) 2
IF (259) 23
ELSE (260) 25
DO (261) 33
WHILE (262) 32 33
FOR (263) 26
BREAK (264) 19
PRINT (265) 18
RETURN (266) 20
INT_TYPE (267) 34
FLOAT_TYPE (268) 35
BOOL_TYPE (269) 36
STRING (270) 18
INTEGER (271) 53 63
REAL (272) 54 64
BOOLEAN (273)
ID (274) 5 34 35 36 40 41 42 44 55
MATH_INC (275) 40
MATH_DEC (276) 41
LOG_EQL (277) 45
LOG_LT (278) 49
LOG_GT (279) 48
LOG_AND (280) 46
LOG_OR (281) 47
LOG_NOT (282) 50


No terminales con las reglas donde aparecen

$accept (39)
    en la izquierda: 0
program (40)
    en la izquierda: 1 2 3, en la derecha: 0 1
program_end (41)
    en la izquierda: 4 5 6, en la derecha: 2 5
commands (42)
    en la izquierda: 7, en la derecha: 2 5 23 25 26 32 33
command_list (43)
    en la izquierda: 8 9 10, en la derecha: 7 8 9
command (44)
    en la izquierda: 11 12 13, en la derecha: 9
stmt (45)
    en la izquierda: 14 15 16 17, en la derecha: 12
cmd (46)
    en la izquierda: 18 19 20 21 22, en la derecha: 11 30 31
if_stmt (47)
    en la izquierda: 23, en la derecha: 14
else_stmt (48)
    en la izquierda: 24 25, en la derecha: 23
for_stmt (49)
    en la izquierda: 26, en la derecha: 15
ffirst (50)
    en la izquierda: 27 28, en la derecha: 26
fthird (51)
    en la izquierda: 29 30 31, en la derecha: 26 30
while_stmt (52)
    en la izquierda: 32, en la derecha: 16
dowhile_stmt (53)
    en la izquierda: 33, en la derecha: 17
declaration (54)
    en la izquierda: 34 35 36, en la derecha: 1 22
attrib_list (55)
    en la izquierda: 37 38, en la derecha: 28 37
attrib (56)
    en la izquierda: 39 40 41 42 43, en la derecha: 21 37 38
i_attrib (57)
    en la izquierda: 44, en la derecha: 39
l_expr (58)
    en la izquierda: 45 46 47 48 49 50 51, en la derecha: 23 26 32
    33 45 46 47 48 49 50 52
l_factor (59)
    en la izquierda: 52 53 54 55, en la derecha: 45 46 47 48 49 51
g_expr (60)
    en la izquierda: 56 57 58, en la derecha: 44 56 57 62
g_term (61)
    en la izquierda: 59 60 61, en la derecha: 56 57 58 59 60
g_factor (62)
    en la izquierda: 62 63 64, en la derecha: 59 60 61


Estado 0

    0 $accept: . program $end

    error       desplazar e ir al estado 1
    MAIN        desplazar e ir al estado 2
    INT_TYPE    desplazar e ir al estado 3
    FLOAT_TYPE  desplazar e ir al estado 4
    BOOL_TYPE   desplazar e ir al estado 5

    program      ir al estado 6
    declaration  ir al estado 7


Estado 1

    3 program: error .

    $default  reduce usando la regla 3 (program)


Estado 2

    2 program: MAIN . '(' ')' '{' commands '}' program_end

    '('  desplazar e ir al estado 8


Estado 3

   34 declaration: INT_TYPE . ID

    ID  desplazar e ir al estado 9


Estado 4

   35 declaration: FLOAT_TYPE . ID

    ID  desplazar e ir al estado 10


Estado 5

   36 declaration: BOOL_TYPE . ID

    ID  desplazar e ir al estado 11


Estado 6

    0 $accept: program . $end

    $end  desplazar e ir al estado 12


Estado 7

    1 program: declaration . ';' program

    ';'  desplazar e ir al estado 13


Estado 8

    2 program: MAIN '(' . ')' '{' commands '}' program_end

    ')'  desplazar e ir al estado 14


Estado 9

   34 declaration: INT_TYPE ID .

    $default  reduce usando la regla 34 (declaration)


Estado 10

   35 declaration: FLOAT_TYPE ID .

    $default  reduce usando la regla 35 (declaration)


Estado 11

   36 declaration: BOOL_TYPE ID .

    $default  reduce usando la regla 36 (declaration)


Estado 12

    0 $accept: program $end .

    $default  aceptar


Estado 13

    1 program: declaration ';' . program

    error       desplazar e ir al estado 1
    MAIN        desplazar e ir al estado 2
    INT_TYPE    desplazar e ir al estado 3
    FLOAT_TYPE  desplazar e ir al estado 4
    BOOL_TYPE   desplazar e ir al estado 5

    program      ir al estado 15
    declaration  ir al estado 7


Estado 14

    2 program: MAIN '(' ')' . '{' commands '}' program_end

    '{'  desplazar e ir al estado 16


Estado 15

    1 program: declaration ';' program .

    $default  reduce usando la regla 1 (program)


Estado 16

    2 program: MAIN '(' ')' '{' . commands '}' program_end

    error       desplazar e ir al estado 17
    IF          desplazar e ir al estado 18
    DO          desplazar e ir al estado 19
    WHILE       desplazar e ir al estado 20
    FOR         desplazar e ir al estado 21
    BREAK       desplazar e ir al estado 22
    PRINT       desplazar e ir al estado 23
    RETURN      desplazar e ir al estado 24
    INT_TYPE    desplazar e ir al estado 3
    FLOAT_TYPE  desplazar e ir al estado 4
    BOOL_TYPE   desplazar e ir al estado 5
    ID          desplazar e ir al estado 25
    '{'         desplazar e ir al estado 26

    '}'  reduce usando la regla 10 (command_list)

    commands      ir al estado 27
    command_list  ir al estado 28
    command       ir al estado 29
    stmt          ir al estado 30
    cmd           ir al estado 31
    if_stmt       ir al estado 32
    for_stmt      ir al estado 33
    while_stmt    ir al estado 34
    dowhile_stmt  ir al estado 35
    declaration   ir al estado 36
    attrib        ir al estado 37
    i_attrib      ir al estado 38


Estado 17

   13 command: error .
   43 attrib: error .

    ';'       reduce usando la regla 43 (attrib)
    $default  reduce usando la regla 13 (command)


Estado 18

   23 if_stmt: IF . '(' l_expr ')' '{' commands '}' else_stmt

    '('  desplazar e ir al estado 39


Estado 19

   33 dowhile_stmt: DO . '{' commands '}' WHILE '(' l_expr ')' ';'

    '{'  desplazar e ir al estado 40


Estado 20

   32 while_stmt: WHILE . '(' l_expr ')' '{' commands '}'

    '('  desplazar e ir al estado 41


Estado 21

   26 for_stmt: FOR . '(' ffirst ';' l_expr ';' fthird ')' '{' commands '}'

    '('  desplazar e ir al estado 42


Estado 22

   19 cmd: BREAK .

    $default  reduce usando la regla 19 (cmd)


Estado 23

   18 cmd: PRINT . STRING

    STRING  desplazar e ir al estado 43


Estado 24

   20 cmd: RETURN .

    $default  reduce usando la regla 20 (cmd)


Estado 25

   40 attrib: ID . MATH_INC
   41       | ID . MATH_DEC
   42       | ID . '=' ID
   44 i_attrib: ID . '=' g_expr

    MATH_INC  desplazar e ir al estado 44
    MATH_DEC  desplazar e ir al estado 45
    '='       desplazar e ir al estado 46


Estado 26

    8 command_list: '{' . command_list '}'

    error       desplazar e ir al estado 17
    IF          desplazar e ir al estado 18
    DO          desplazar e ir al estado 19
    WHILE       desplazar e ir al estado 20
    FOR         desplazar e ir al estado 21
    BREAK       desplazar e ir al estado 22
    PRINT       desplazar e ir al estado 23
    RETURN      desplazar e ir al estado 24
    INT_TYPE    desplazar e ir al estado 3
    FLOAT_TYPE  desplazar e ir al estado 4
    BOOL_TYPE   desplazar e ir al estado 5
    ID          desplazar e ir al estado 25
    '{'         desplazar e ir al estado 26

    '}'  reduce usando la regla 10 (command_list)

    command_list  ir al estado 47
    command       ir al estado 29
    stmt          ir al estado 30
    cmd           ir al estado 31
    if_stmt       ir al estado 32
    for_stmt      ir al estado 33
    while_stmt    ir al estado 34
    dowhile_stmt  ir al estado 35
    declaration   ir al estado 36
    attrib        ir al estado 37
    i_attrib      ir al estado 38


Estado 27

    2 program: MAIN '(' ')' '{' commands . '}' program_end

    '}'  desplazar e ir al estado 48


Estado 28

    7 commands: command_list .

    $default  reduce usando la regla 7 (commands)


Estado 29

    9 command_list: command . command_list

    error       desplazar e ir al estado 17
    IF          desplazar e ir al estado 18
    DO          desplazar e ir al estado 19
    WHILE       desplazar e ir al estado 20
    FOR         desplazar e ir al estado 21
    BREAK       desplazar e ir al estado 22
    PRINT       desplazar e ir al estado 23
    RETURN      desplazar e ir al estado 24
    INT_TYPE    desplazar e ir al estado 3
    FLOAT_TYPE  desplazar e ir al estado 4
    BOOL_TYPE   desplazar e ir al estado 5
    ID          desplazar e ir al estado 25
    '{'         desplazar e ir al estado 26

    '}'  reduce usando la regla 10 (command_list)

    command_list  ir al estado 49
    command       ir al estado 29
    stmt          ir al estado 30
    cmd           ir al estado 31
    if_stmt       ir al estado 32
    for_stmt      ir al estado 33
    while_stmt    ir al estado 34
    dowhile_stmt  ir al estado 35
    declaration   ir al estado 36
    attrib        ir al estado 37
    i_attrib      ir al estado 38


Estado 30

   12 command: stmt .

    $default  reduce usando la regla 12 (command)


Estado 31

   11 command: cmd . ';'

    ';'  desplazar e ir al estado 50


Estado 32

   14 stmt: if_stmt .

    $default  reduce usando la regla 14 (stmt)


Estado 33

   15 stmt: for_stmt .

    $default  reduce usando la regla 15 (stmt)


Estado 34

   16 stmt: while_stmt .

    $default  reduce usando la regla 16 (stmt)


Estado 35

   17 stmt: dowhile_stmt .

    $default  reduce usando la regla 17 (stmt)


Estado 36

   22 cmd: declaration .

    $default  reduce usando la regla 22 (cmd)


Estado 37

   21 cmd: attrib .

    $default  reduce usando la regla 21 (cmd)


Estado 38

   39 attrib: i_attrib .

    $default  reduce usando la regla 39 (attrib)


Estado 39

   23 if_stmt: IF '(' . l_expr ')' '{' commands '}' else_stmt

    INTEGER  desplazar e ir al estado 51
    REAL     desplazar e ir al estado 52
    ID       desplazar e ir al estado 53
    LOG_NOT  desplazar e ir al estado 54
    '('      desplazar e ir al estado 55

    l_expr    ir al estado 56
    l_factor  ir al estado 57


Estado 40

   33 dowhile_stmt: DO '{' . commands '}' WHILE '(' l_expr ')' ';'

    error       desplazar e ir al estado 17
    IF          desplazar e ir al estado 18
    DO          desplazar e ir al estado 19
    WHILE       desplazar e ir al estado 20
    FOR         desplazar e ir al estado 21
    BREAK       desplazar e ir al estado 22
    PRINT       desplazar e ir al estado 23
    RETURN      desplazar e ir al estado 24
    INT_TYPE    desplazar e ir al estado 3
    FLOAT_TYPE  desplazar e ir al estado 4
    BOOL_TYPE   desplazar e ir al estado 5
    ID          desplazar e ir al estado 25
    '{'         desplazar e ir al estado 26

    '}'  reduce usando la regla 10 (command_list)

    commands      ir al estado 58
    command_list  ir al estado 28
    command       ir al estado 29
    stmt          ir al estado 30
    cmd           ir al estado 31
    if_stmt       ir al estado 32
    for_stmt      ir al estado 33
    while_stmt    ir al estado 34
    dowhile_stmt  ir al estado 35
    declaration   ir al estado 36
    attrib        ir al estado 37
    i_attrib      ir al estado 38


Estado 41

   32 while_stmt: WHILE '(' . l_expr ')' '{' commands '}'

    INTEGER  desplazar e ir al estado 51
    REAL     desplazar e ir al estado 52
    ID       desplazar e ir al estado 53
    LOG_NOT  desplazar e ir al estado 54
    '('      desplazar e ir al estado 55

    l_expr    ir al estado 59
    l_factor  ir al estado 57


Estado 42

   26 for_stmt: FOR '(' . ffirst ';' l_expr ';' fthird ')' '{' commands '}'

    error  desplazar e ir al estado 60
    ID     desplazar e ir al estado 25

    ';'  reduce usando la regla 27 (ffirst)

    ffirst       ir al estado 61
    attrib_list  ir al estado 62
    attrib       ir al estado 63
    i_attrib     ir al estado 38


Estado 43

   18 cmd: PRINT STRING .

    $default  reduce usando la regla 18 (cmd)


Estado 44

   40 attrib: ID MATH_INC .

    $default  reduce usando la regla 40 (attrib)


Estado 45

   41 attrib: ID MATH_DEC .

    $default  reduce usando la regla 41 (attrib)


Estado 46

   42 attrib: ID '=' . ID
   44 i_attrib: ID '=' . g_expr

    INTEGER  desplazar e ir al estado 64
    REAL     desplazar e ir al estado 65
    ID       desplazar e ir al estado 66
    '('      desplazar e ir al estado 67

    g_expr    ir al estado 68
    g_term    ir al estado 69
    g_factor  ir al estado 70


Estado 47

    8 command_list: '{' command_list . '}'

    '}'  desplazar e ir al estado 71


Estado 48

    2 program: MAIN '(' ')' '{' commands '}' . program_end

    error  desplazar e ir al estado 72
    ID     desplazar e ir al estado 73

    $end  reduce usando la regla 4 (program_end)

    program_end  ir al estado 74


Estado 49

    9 command_list: command command_list .

    $default  reduce usando la regla 9 (command_list)


Estado 50

   11 command: cmd ';' .

    $default  reduce usando la regla 11 (command)


Estado 51

   53 l_factor: INTEGER .

    $default  reduce usando la regla 53 (l_factor)


Estado 52

   54 l_factor: REAL .

    $default  reduce usando la regla 54 (l_factor)


Estado 53

   55 l_factor: ID .

    $default  reduce usando la regla 55 (l_factor)


Estado 54

   50 l_expr: LOG_NOT . l_expr

    INTEGER  desplazar e ir al estado 51
    REAL     desplazar e ir al estado 52
    ID       desplazar e ir al estado 53
    LOG_NOT  desplazar e ir al estado 54
    '('      desplazar e ir al estado 55

    l_expr    ir al estado 75
    l_factor  ir al estado 57


Estado 55

   52 l_factor: '(' . l_expr ')'

    INTEGER  desplazar e ir al estado 51
    REAL     desplazar e ir al estado 52
    ID       desplazar e ir al estado 53
    LOG_NOT  desplazar e ir al estado 54
    '('      desplazar e ir al estado 55

    l_expr    ir al estado 76
    l_factor  ir al estado 57


Estado 56

   23 if_stmt: IF '(' l_expr . ')' '{' commands '}' else_stmt
   45 l_expr: l_expr . LOG_EQL l_factor
   46       | l_expr . LOG_AND l_factor
   47       | l_expr . LOG_OR l_factor
   48       | l_expr . LOG_GT l_factor
   49       | l_expr . LOG_LT l_factor

    LOG_EQL  desplazar e ir al estado 77
    LOG_LT   desplazar e ir al estado 78
    LOG_GT   desplazar e ir al estado 79
    LOG_AND  desplazar e ir al estado 80
    LOG_OR   desplazar e ir al estado 81
    ')'      desplazar e ir al estado 82


Estado 57

   51 l_expr: l_factor .

    $default  reduce usando la regla 51 (l_expr)


Estado 58

   33 dowhile_stmt: DO '{' commands . '}' WHILE '(' l_expr ')' ';'

    '}'  desplazar e ir al estado 83


Estado 59

   32 while_stmt: WHILE '(' l_expr . ')' '{' commands '}'
   45 l_expr: l_expr . LOG_EQL l_factor
   46       | l_expr . LOG_AND l_factor
   47       | l_expr . LOG_OR l_factor
   48       | l_expr . LOG_GT l_factor
   49       | l_expr . LOG_LT l_factor

    LOG_EQL  desplazar e ir al estado 77
    LOG_LT   desplazar e ir al estado 78
    LOG_GT   desplazar e ir al estado 79
    LOG_AND  desplazar e ir al estado 80
    LOG_OR   desplazar e ir al estado 81
    ')'      desplazar e ir al estado 84


Estado 60

   43 attrib: error .

    $default  reduce usando la regla 43 (attrib)


Estado 61

   26 for_stmt: FOR '(' ffirst . ';' l_expr ';' fthird ')' '{' commands '}'

    ';'  desplazar e ir al estado 85


Estado 62

   28 ffirst: attrib_list .

    $default  reduce usando la regla 28 (ffirst)


Estado 63

   37 attrib_list: attrib . ',' attrib_list
   38            | attrib .

    ','  desplazar e ir al estado 86

    $default  reduce usando la regla 38 (attrib_list)


Estado 64

   63 g_factor: INTEGER .

    $default  reduce usando la regla 63 (g_factor)


Estado 65

   64 g_factor: REAL .

    $default  reduce usando la regla 64 (g_factor)


Estado 66

   42 attrib: ID '=' ID .

    $default  reduce usando la regla 42 (attrib)


Estado 67

   62 g_factor: '(' . g_expr ')'

    INTEGER  desplazar e ir al estado 64
    REAL     desplazar e ir al estado 65
    '('      desplazar e ir al estado 67

    g_expr    ir al estado 87
    g_term    ir al estado 69
    g_factor  ir al estado 70


Estado 68

   44 i_attrib: ID '=' g_expr .
   56 g_expr: g_expr . '+' g_term
   57       | g_expr . '-' g_term

    '+'  desplazar e ir al estado 88
    '-'  desplazar e ir al estado 89

    $default  reduce usando la regla 44 (i_attrib)


Estado 69

   58 g_expr: g_term .
   59 g_term: g_term . '*' g_factor
   60       | g_term . '/' g_factor

    '*'  desplazar e ir al estado 90
    '/'  desplazar e ir al estado 91

    $default  reduce usando la regla 58 (g_expr)


Estado 70

   61 g_term: g_factor .

    $default  reduce usando la regla 61 (g_term)


Estado 71

    8 command_list: '{' command_list '}' .

    $default  reduce usando la regla 8 (command_list)


Estado 72

    6 program_end: error .

    $default  reduce usando la regla 6 (program_end)


Estado 73

    5 program_end: ID . '(' ')' '{' commands '}' program_end

    '('  desplazar e ir al estado 92


Estado 74

    2 program: MAIN '(' ')' '{' commands '}' program_end .

    $default  reduce usando la regla 2 (program)


Estado 75

   45 l_expr: l_expr . LOG_EQL l_factor
   46       | l_expr . LOG_AND l_factor
   47       | l_expr . LOG_OR l_factor
   48       | l_expr . LOG_GT l_factor
   49       | l_expr . LOG_LT l_factor
   50       | LOG_NOT l_expr .

    $default  reduce usando la regla 50 (l_expr)


Estado 76

   45 l_expr: l_expr . LOG_EQL l_factor
   46       | l_expr . LOG_AND l_factor
   47       | l_expr . LOG_OR l_factor
   48       | l_expr . LOG_GT l_factor
   49       | l_expr . LOG_LT l_factor
   52 l_factor: '(' l_expr . ')'

    LOG_EQL  desplazar e ir al estado 77
    LOG_LT   desplazar e ir al estado 78
    LOG_GT   desplazar e ir al estado 79
    LOG_AND  desplazar e ir al estado 80
    LOG_OR   desplazar e ir al estado 81
    ')'      desplazar e ir al estado 93


Estado 77

   45 l_expr: l_expr LOG_EQL . l_factor

    INTEGER  desplazar e ir al estado 51
    REAL     desplazar e ir al estado 52
    ID       desplazar e ir al estado 53
    '('      desplazar e ir al estado 55

    l_factor  ir al estado 94


Estado 78

   49 l_expr: l_expr LOG_LT . l_factor

    INTEGER  desplazar e ir al estado 51
    REAL     desplazar e ir al estado 52
    ID       desplazar e ir al estado 53
    '('      desplazar e ir al estado 55

    l_factor  ir al estado 95


Estado 79

   48 l_expr: l_expr LOG_GT . l_factor

    INTEGER  desplazar e ir al estado 51
    REAL     desplazar e ir al estado 52
    ID       desplazar e ir al estado 53
    '('      desplazar e ir al estado 55

    l_factor  ir al estado 96


Estado 80

   46 l_expr: l_expr LOG_AND . l_factor

    INTEGER  desplazar e ir al estado 51
    REAL     desplazar e ir al estado 52
    ID       desplazar e ir al estado 53
    '('      desplazar e ir al estado 55

    l_factor  ir al estado 97


Estado 81

   47 l_expr: l_expr LOG_OR . l_factor

    INTEGER  desplazar e ir al estado 51
    REAL     desplazar e ir al estado 52
    ID       desplazar e ir al estado 53
    '('      desplazar e ir al estado 55

    l_factor  ir al estado 98


Estado 82

   23 if_stmt: IF '(' l_expr ')' . '{' commands '}' else_stmt

    '{'  desplazar e ir al estado 99


Estado 83

   33 dowhile_stmt: DO '{' commands '}' . WHILE '(' l_expr ')' ';'

    WHILE  desplazar e ir al estado 100


Estado 84

   32 while_stmt: WHILE '(' l_expr ')' . '{' commands '}'

    '{'  desplazar e ir al estado 101


Estado 85

   26 for_stmt: FOR '(' ffirst ';' . l_expr ';' fthird ')' '{' commands '}'

    INTEGER  desplazar e ir al estado 51
    REAL     desplazar e ir al estado 52
    ID       desplazar e ir al estado 53
    LOG_NOT  desplazar e ir al estado 54
    '('      desplazar e ir al estado 55

    l_expr    ir al estado 102
    l_factor  ir al estado 57


Estado 86

   37 attrib_list: attrib ',' . attrib_list

    error  desplazar e ir al estado 60
    ID     desplazar e ir al estado 25

    attrib_list  ir al estado 103
    attrib       ir al estado 63
    i_attrib     ir al estado 38


Estado 87

   56 g_expr: g_expr . '+' g_term
   57       | g_expr . '-' g_term
   62 g_factor: '(' g_expr . ')'

    '+'  desplazar e ir al estado 88
    '-'  desplazar e ir al estado 89
    ')'  desplazar e ir al estado 104


Estado 88

   56 g_expr: g_expr '+' . g_term

    INTEGER  desplazar e ir al estado 64
    REAL     desplazar e ir al estado 65
    '('      desplazar e ir al estado 67

    g_term    ir al estado 105
    g_factor  ir al estado 70


Estado 89

   57 g_expr: g_expr '-' . g_term

    INTEGER  desplazar e ir al estado 64
    REAL     desplazar e ir al estado 65
    '('      desplazar e ir al estado 67

    g_term    ir al estado 106
    g_factor  ir al estado 70


Estado 90

   59 g_term: g_term '*' . g_factor

    INTEGER  desplazar e ir al estado 64
    REAL     desplazar e ir al estado 65
    '('      desplazar e ir al estado 67

    g_factor  ir al estado 107


Estado 91

   60 g_term: g_term '/' . g_factor

    INTEGER  desplazar e ir al estado 64
    REAL     desplazar e ir al estado 65
    '('      desplazar e ir al estado 67

    g_factor  ir al estado 108


Estado 92

    5 program_end: ID '(' . ')' '{' commands '}' program_end

    ')'  desplazar e ir al estado 109


Estado 93

   52 l_factor: '(' l_expr ')' .

    $default  reduce usando la regla 52 (l_factor)


Estado 94

   45 l_expr: l_expr LOG_EQL l_factor .

    $default  reduce usando la regla 45 (l_expr)


Estado 95

   49 l_expr: l_expr LOG_LT l_factor .

    $default  reduce usando la regla 49 (l_expr)


Estado 96

   48 l_expr: l_expr LOG_GT l_factor .

    $default  reduce usando la regla 48 (l_expr)


Estado 97

   46 l_expr: l_expr LOG_AND l_factor .

    $default  reduce usando la regla 46 (l_expr)


Estado 98

   47 l_expr: l_expr LOG_OR l_factor .

    $default  reduce usando la regla 47 (l_expr)


Estado 99

   23 if_stmt: IF '(' l_expr ')' '{' . commands '}' else_stmt

    error       desplazar e ir al estado 17
    IF          desplazar e ir al estado 18
    DO          desplazar e ir al estado 19
    WHILE       desplazar e ir al estado 20
    FOR         desplazar e ir al estado 21
    BREAK       desplazar e ir al estado 22
    PRINT       desplazar e ir al estado 23
    RETURN      desplazar e ir al estado 24
    INT_TYPE    desplazar e ir al estado 3
    FLOAT_TYPE  desplazar e ir al estado 4
    BOOL_TYPE   desplazar e ir al estado 5
    ID          desplazar e ir al estado 25
    '{'         desplazar e ir al estado 26

    '}'  reduce usando la regla 10 (command_list)

    commands      ir al estado 110
    command_list  ir al estado 28
    command       ir al estado 29
    stmt          ir al estado 30
    cmd           ir al estado 31
    if_stmt       ir al estado 32
    for_stmt      ir al estado 33
    while_stmt    ir al estado 34
    dowhile_stmt  ir al estado 35
    declaration   ir al estado 36
    attrib        ir al estado 37
    i_attrib      ir al estado 38


Estado 100

   33 dowhile_stmt: DO '{' commands '}' WHILE . '(' l_expr ')' ';'

    '('  desplazar e ir al estado 111


Estado 101

   32 while_stmt: WHILE '(' l_expr ')' '{' . commands '}'

    error       desplazar e ir al estado 17
    IF          desplazar e ir al estado 18
    DO          desplazar e ir al estado 19
    WHILE       desplazar e ir al estado 20
    FOR         desplazar e ir al estado 21
    BREAK       desplazar e ir al estado 22
    PRINT       desplazar e ir al estado 23
    RETURN      desplazar e ir al estado 24
    INT_TYPE    desplazar e ir al estado 3
    FLOAT_TYPE  desplazar e ir al estado 4
    BOOL_TYPE   desplazar e ir al estado 5
    ID          desplazar e ir al estado 25
    '{'         desplazar e ir al estado 26

    '}'  reduce usando la regla 10 (command_list)

    commands      ir al estado 112
    command_list  ir al estado 28
    command       ir al estado 29
    stmt          ir al estado 30
    cmd           ir al estado 31
    if_stmt       ir al estado 32
    for_stmt      ir al estado 33
    while_stmt    ir al estado 34
    dowhile_stmt  ir al estado 35
    declaration   ir al estado 36
    attrib        ir al estado 37
    i_attrib      ir al estado 38


Estado 102

   26 for_stmt: FOR '(' ffirst ';' l_expr . ';' fthird ')' '{' commands '}'
   45 l_expr: l_expr . LOG_EQL l_factor
   46       | l_expr . LOG_AND l_factor
   47       | l_expr . LOG_OR l_factor
   48       | l_expr . LOG_GT l_factor
   49       | l_expr . LOG_LT l_factor

    LOG_EQL  desplazar e ir al estado 77
    LOG_LT   desplazar e ir al estado 78
    LOG_GT   desplazar e ir al estado 79
    LOG_AND  desplazar e ir al estado 80
    LOG_OR   desplazar e ir al estado 81
    ';'      desplazar e ir al estado 113


Estado 103

   37 attrib_list: attrib ',' attrib_list .

    $default  reduce usando la regla 37 (attrib_list)


Estado 104

   62 g_factor: '(' g_expr ')' .

    $default  reduce usando la regla 62 (g_factor)


Estado 105

   56 g_expr: g_expr '+' g_term .
   59 g_term: g_term . '*' g_factor
   60       | g_term . '/' g_factor

    '*'  desplazar e ir al estado 90
    '/'  desplazar e ir al estado 91

    $default  reduce usando la regla 56 (g_expr)


Estado 106

   57 g_expr: g_expr '-' g_term .
   59 g_term: g_term . '*' g_factor
   60       | g_term . '/' g_factor

    '*'  desplazar e ir al estado 90
    '/'  desplazar e ir al estado 91

    $default  reduce usando la regla 57 (g_expr)


Estado 107

   59 g_term: g_term '*' g_factor .

    $default  reduce usando la regla 59 (g_term)


Estado 108

   60 g_term: g_term '/' g_factor .

    $default  reduce usando la regla 60 (g_term)


Estado 109

    5 program_end: ID '(' ')' . '{' commands '}' program_end

    '{'  desplazar e ir al estado 114


Estado 110

   23 if_stmt: IF '(' l_expr ')' '{' commands . '}' else_stmt

    '}'  desplazar e ir al estado 115


Estado 111

   33 dowhile_stmt: DO '{' commands '}' WHILE '(' . l_expr ')' ';'

    INTEGER  desplazar e ir al estado 51
    REAL     desplazar e ir al estado 52
    ID       desplazar e ir al estado 53
    LOG_NOT  desplazar e ir al estado 54
    '('      desplazar e ir al estado 55

    l_expr    ir al estado 116
    l_factor  ir al estado 57


Estado 112

   32 while_stmt: WHILE '(' l_expr ')' '{' commands . '}'

    '}'  desplazar e ir al estado 117


Estado 113

   26 for_stmt: FOR '(' ffirst ';' l_expr ';' . fthird ')' '{' commands '}'

    error       desplazar e ir al estado 60
    BREAK       desplazar e ir al estado 22
    PRINT       desplazar e ir al estado 23
    RETURN      desplazar e ir al estado 24
    INT_TYPE    desplazar e ir al estado 3
    FLOAT_TYPE  desplazar e ir al estado 4
    BOOL_TYPE   desplazar e ir al estado 5
    ID          desplazar e ir al estado 25

    ')'  reduce usando la regla 29 (fthird)

    cmd          ir al estado 118
    fthird       ir al estado 119
    declaration  ir al estado 36
    attrib       ir al estado 37
    i_attrib     ir al estado 38


Estado 114

    5 program_end: ID '(' ')' '{' . commands '}' program_end

    error       desplazar e ir al estado 17
    IF          desplazar e ir al estado 18
    DO          desplazar e ir al estado 19
    WHILE       desplazar e ir al estado 20
    FOR         desplazar e ir al estado 21
    BREAK       desplazar e ir al estado 22
    PRINT       desplazar e ir al estado 23
    RETURN      desplazar e ir al estado 24
    INT_TYPE    desplazar e ir al estado 3
    FLOAT_TYPE  desplazar e ir al estado 4
    BOOL_TYPE   desplazar e ir al estado 5
    ID          desplazar e ir al estado 25
    '{'         desplazar e ir al estado 26

    '}'  reduce usando la regla 10 (command_list)

    commands      ir al estado 120
    command_list  ir al estado 28
    command       ir al estado 29
    stmt          ir al estado 30
    cmd           ir al estado 31
    if_stmt       ir al estado 32
    for_stmt      ir al estado 33
    while_stmt    ir al estado 34
    dowhile_stmt  ir al estado 35
    declaration   ir al estado 36
    attrib        ir al estado 37
    i_attrib      ir al estado 38


Estado 115

   23 if_stmt: IF '(' l_expr ')' '{' commands '}' . else_stmt

    ELSE  desplazar e ir al estado 121

    $default  reduce usando la regla 24 (else_stmt)

    else_stmt  ir al estado 122


Estado 116

   33 dowhile_stmt: DO '{' commands '}' WHILE '(' l_expr . ')' ';'
   45 l_expr: l_expr . LOG_EQL l_factor
   46       | l_expr . LOG_AND l_factor
   47       | l_expr . LOG_OR l_factor
   48       | l_expr . LOG_GT l_factor
   49       | l_expr . LOG_LT l_factor

    LOG_EQL  desplazar e ir al estado 77
    LOG_LT   desplazar e ir al estado 78
    LOG_GT   desplazar e ir al estado 79
    LOG_AND  desplazar e ir al estado 80
    LOG_OR   desplazar e ir al estado 81
    ')'      desplazar e ir al estado 123


Estado 117

   32 while_stmt: WHILE '(' l_expr ')' '{' commands '}' .

    $default  reduce usando la regla 32 (while_stmt)


Estado 118

   30 fthird: cmd . ',' fthird
   31       | cmd .

    ','  desplazar e ir al estado 124

    $default  reduce usando la regla 31 (fthird)


Estado 119

   26 for_stmt: FOR '(' ffirst ';' l_expr ';' fthird . ')' '{' commands '}'

    ')'  desplazar e ir al estado 125


Estado 120

    5 program_end: ID '(' ')' '{' commands . '}' program_end

    '}'  desplazar e ir al estado 126


Estado 121

   25 else_stmt: ELSE . '{' commands '}'

    '{'  desplazar e ir al estado 127


Estado 122

   23 if_stmt: IF '(' l_expr ')' '{' commands '}' else_stmt .

    $default  reduce usando la regla 23 (if_stmt)


Estado 123

   33 dowhile_stmt: DO '{' commands '}' WHILE '(' l_expr ')' . ';'

    ';'  desplazar e ir al estado 128


Estado 124

   30 fthird: cmd ',' . fthird

    error       desplazar e ir al estado 60
    BREAK       desplazar e ir al estado 22
    PRINT       desplazar e ir al estado 23
    RETURN      desplazar e ir al estado 24
    INT_TYPE    desplazar e ir al estado 3
    FLOAT_TYPE  desplazar e ir al estado 4
    BOOL_TYPE   desplazar e ir al estado 5
    ID          desplazar e ir al estado 25

    ')'  reduce usando la regla 29 (fthird)

    cmd          ir al estado 118
    fthird       ir al estado 129
    declaration  ir al estado 36
    attrib       ir al estado 37
    i_attrib     ir al estado 38


Estado 125

   26 for_stmt: FOR '(' ffirst ';' l_expr ';' fthird ')' . '{' commands '}'

    '{'  desplazar e ir al estado 130


Estado 126

    5 program_end: ID '(' ')' '{' commands '}' . program_end

    error  desplazar e ir al estado 72
    ID     desplazar e ir al estado 73

    $end  reduce usando la regla 4 (program_end)

    program_end  ir al estado 131


Estado 127

   25 else_stmt: ELSE '{' . commands '}'

    error       desplazar e ir al estado 17
    IF          desplazar e ir al estado 18
    DO          desplazar e ir al estado 19
    WHILE       desplazar e ir al estado 20
    FOR         desplazar e ir al estado 21
    BREAK       desplazar e ir al estado 22
    PRINT       desplazar e ir al estado 23
    RETURN      desplazar e ir al estado 24
    INT_TYPE    desplazar e ir al estado 3
    FLOAT_TYPE  desplazar e ir al estado 4
    BOOL_TYPE   desplazar e ir al estado 5
    ID          desplazar e ir al estado 25
    '{'         desplazar e ir al estado 26

    '}'  reduce usando la regla 10 (command_list)

    commands      ir al estado 132
    command_list  ir al estado 28
    command       ir al estado 29
    stmt          ir al estado 30
    cmd           ir al estado 31
    if_stmt       ir al estado 32
    for_stmt      ir al estado 33
    while_stmt    ir al estado 34
    dowhile_stmt  ir al estado 35
    declaration   ir al estado 36
    attrib        ir al estado 37
    i_attrib      ir al estado 38


Estado 128

   33 dowhile_stmt: DO '{' commands '}' WHILE '(' l_expr ')' ';' .

    $default  reduce usando la regla 33 (dowhile_stmt)


Estado 129

   30 fthird: cmd ',' fthird .

    $default  reduce usando la regla 30 (fthird)


Estado 130

   26 for_stmt: FOR '(' ffirst ';' l_expr ';' fthird ')' '{' . commands '}'

    error       desplazar e ir al estado 17
    IF          desplazar e ir al estado 18
    DO          desplazar e ir al estado 19
    WHILE       desplazar e ir al estado 20
    FOR         desplazar e ir al estado 21
    BREAK       desplazar e ir al estado 22
    PRINT       desplazar e ir al estado 23
    RETURN      desplazar e ir al estado 24
    INT_TYPE    desplazar e ir al estado 3
    FLOAT_TYPE  desplazar e ir al estado 4
    BOOL_TYPE   desplazar e ir al estado 5
    ID          desplazar e ir al estado 25
    '{'         desplazar e ir al estado 26

    '}'  reduce usando la regla 10 (command_list)

    commands      ir al estado 133
    command_list  ir al estado 28
    command       ir al estado 29
    stmt          ir al estado 30
    cmd           ir al estado 31
    if_stmt       ir al estado 32
    for_stmt      ir al estado 33
    while_stmt    ir al estado 34
    dowhile_stmt  ir al estado 35
    declaration   ir al estado 36
    attrib        ir al estado 37
    i_attrib      ir al estado 38


Estado 131

    5 program_end: ID '(' ')' '{' commands '}' program_end .

    $default  reduce usando la regla 5 (program_end)


Estado 132

   25 else_stmt: ELSE '{' commands . '}'

    '}'  desplazar e ir al estado 134


Estado 133

   26 for_stmt: FOR '(' ffirst ';' l_expr ';' fthird ')' '{' commands . '}'

    '}'  desplazar e ir al estado 135


Estado 134

   25 else_stmt: ELSE '{' commands '}' .

    $default  reduce usando la regla 25 (else_stmt)


Estado 135

   26 for_stmt: FOR '(' ffirst ';' l_expr ';' fthird ')' '{' commands '}' .

    $default  reduce usando la regla 26 (for_stmt)
